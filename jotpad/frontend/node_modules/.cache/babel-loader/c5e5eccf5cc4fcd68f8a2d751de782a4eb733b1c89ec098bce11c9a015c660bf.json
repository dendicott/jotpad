{"ast":null,"code":"var _jsxFileName = \"/Users/Endicott/dev/Software/jotpad/frontend/src/pages/NotePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotePage = _ref => {\n  _s();\n  let {\n    match,\n    history\n  } = _ref;\n  let noteId = match.params.id;\n  let [note, setNote] = useState(null);\n  useEffect(() => {\n    getNote();\n  }, [noteId]);\n  let getNote = async () => {\n    let response = await fetch(`/api/notes/${noteId}/`);\n    let data = await response.json();\n    setNote(data);\n  };\n  let upddateNote = async () => {\n    fetch(`/api/notes/${noteId}/update`, {\n      method: \"PUT\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    });\n  };\n  let handleSubmit = () => {\n    upddateNote();\n    history.push('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(ArrowLeft, {\n          onClick: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: e => {\n        setNote({\n          ...note,\n          'body': e.target.value\n        });\n      },\n      defaultValue: note === null || note === void 0 ? void 0 : note.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n};\n_s(NotePage, \"k41NuHLtMLNqVoRGkWqAFGkbS8Y=\");\n_c = NotePage;\nexport default NotePage;\nvar _c;\n$RefreshReg$(_c, \"NotePage\");","map":{"version":3,"names":["React","useState","useEffect","Link","ReactComponent","ArrowLeft","NotePage","match","history","noteId","params","id","note","setNote","getNote","response","fetch","data","json","upddateNote","method","headers","body","JSON","stringify","handleSubmit","push","e","target","value"],"sources":["/Users/Endicott/dev/Software/jotpad/frontend/src/pages/NotePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom';\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg'\n\nconst NotePage = ({ match, history }) => {\n    \n    let noteId = match.params.id;\n    let [note, setNote] = useState(null);\n\n    useEffect(() => {\n        getNote()\n    }, [noteId])\n\n    let getNote = async () => {\n        let response = await fetch(`/api/notes/${noteId}/`);\n        let data = await response.json();\n        setNote(data);\n    }\n\n    let upddateNote = async () => {\n        fetch(`/api/notes/${noteId}/update`,{\n          method: \"PUT\",\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(note)\n          })\n        }\n\n    let handleSubmit = () => {\n      upddateNote()\n      history.push('/')\n    }\n\n    return (\n      <div className='note'>\n        <div className='note-header'>\n          <h3>\n            <ArrowLeft onClick={handleSubmit}/>\n          </h3>\n        </div>\n        <textarea onChange={(e) => { setNote({...note, 'body': e.target.value})}} defaultValue={note?.body}></textarea>\n      </div>\n  )\n}\n\nexport default NotePage\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,cAAc,IAAIC,SAAS,QAAQ,0BAA0B;AAAA;AAEtE,MAAMC,QAAQ,GAAG,QAAwB;EAAA;EAAA,IAAvB;IAAEC,KAAK;IAAEC;EAAQ,CAAC;EAEhC,IAAIC,MAAM,GAAGF,KAAK,CAACG,MAAM,CAACC,EAAE;EAC5B,IAAI,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACZY,OAAO,EAAE;EACb,CAAC,EAAE,CAACL,MAAM,CAAC,CAAC;EAEZ,IAAIK,OAAO,GAAG,YAAY;IACtB,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,cAAaP,MAAO,GAAE,CAAC;IACnD,IAAIQ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAChCL,OAAO,CAACI,IAAI,CAAC;EACjB,CAAC;EAED,IAAIE,WAAW,GAAG,YAAY;IAC1BH,KAAK,CAAE,cAAaP,MAAO,SAAQ,EAAC;MAClCW,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,IAAI;IACzB,CAAC,CAAC;EACJ,CAAC;EAEL,IAAIa,YAAY,GAAG,MAAM;IACvBN,WAAW,EAAE;IACbX,OAAO,CAACkB,IAAI,CAAC,GAAG,CAAC;EACnB,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,MAAM;IAAA,wBACnB;MAAK,SAAS,EAAC,aAAa;MAAA,uBAC1B;QAAA,uBACE,QAAC,SAAS;UAAC,OAAO,EAAED;QAAa;UAAA;UAAA;UAAA;QAAA;MAAE;QAAA;QAAA;QAAA;MAAA;IAChC;MAAA;MAAA;MAAA;IAAA,QACD,eACN;MAAU,QAAQ,EAAGE,CAAC,IAAK;QAAEd,OAAO,CAAC;UAAC,GAAGD,IAAI;UAAE,MAAM,EAAEe,CAAC,CAACC,MAAM,CAACC;QAAK,CAAC,CAAC;MAAA,CAAE;MAAC,YAAY,EAAEjB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEU;IAAK;MAAA;MAAA;MAAA;IAAA,QAAY;EAAA;IAAA;IAAA;IAAA;EAAA,QAC3G;AAEZ,CAAC;AAAA,GAxCKhB,QAAQ;AAAA,KAARA,QAAQ;AA0Cd,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}