{"ast":null,"code":"var _jsxFileName = \"/Users/Endicott/dev/Software/jotpad/jotpad/frontend/src/pages/NotePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotePage = _ref => {\n  _s();\n  let {\n    match,\n    history\n  } = _ref;\n  let noteId = match.params.id;\n  let [note, setNote] = useState(null);\n  useEffect(() => {\n    getNote();\n  }, [noteId]);\n  let getNote = async () => {\n    if (noteId === 'new') return;\n    let response = await fetch(`/api/notes/${noteId}/`);\n    let data = await response.json();\n    setNote(data);\n  };\n  let createNote = async () => {\n    fetch(`/api/notes/create/`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    });\n  };\n  let upddateNote = async () => {\n    fetch(`/api/notes/${noteId}/update`, {\n      method: \"PUT\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    });\n  };\n  let deleteNote = async () => {\n    fetch(`/api/notes/${noteId}/delete`, {\n      method: \"DELETE\",\n      'headers': {\n        'Content-Type': 'application/json'\n      }\n    });\n    history.push('/');\n  };\n  let handleChange = value => {\n    setNote(note => ({\n      ...note,\n      'body': value\n    }));\n    console.log('Handle Change:', note);\n  };\n  let handleSubmit = () => {\n    console.log('NOTE:', note);\n    if (noteId !== 'new' && note.body === '') {\n      console.log(\"DELETE METHOD TRIGGERED\");\n      deleteNote();\n    } else if (noteId !== 'new') {\n      upddateNote();\n    } else if (noteId === 'new' && note.body !== null) {\n      createNote();\n    }\n    history.push('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(ArrowLeft, {\n          onClick: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), noteId !== 'new' ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteNote,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: e => {\n        handleChange(e.target.value);\n      },\n      value: note === null || note === void 0 ? void 0 : note.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 7\n  }, this);\n};\n_s(NotePage, \"k41NuHLtMLNqVoRGkWqAFGkbS8Y=\");\n_c = NotePage;\nexport default NotePage;\nvar _c;\n$RefreshReg$(_c, \"NotePage\");","map":{"version":3,"names":["React","useState","useEffect","Link","ReactComponent","ArrowLeft","NotePage","match","history","noteId","params","id","note","setNote","getNote","response","fetch","data","json","createNote","method","headers","body","JSON","stringify","upddateNote","deleteNote","push","handleChange","value","console","log","handleSubmit","e","target"],"sources":["/Users/Endicott/dev/Software/jotpad/jotpad/frontend/src/pages/NotePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom';\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg'\n\nconst NotePage = ({ match, history }) => {\n    \n    let noteId = match.params.id;\n    let [note, setNote] = useState(null);\n\n    useEffect(() => {\n        getNote()\n    }, [noteId])\n\n    let getNote = async () => {\n        if (noteId === 'new') return;\n        let response = await fetch(`/api/notes/${noteId}/`);\n        let data = await response.json();\n        setNote(data);\n    }\n\n    let createNote = async () => {\n      fetch(`/api/notes/create/`,{\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(note)\n        });\n    }\n\n    let upddateNote = async () => {\n        fetch(`/api/notes/${noteId}/update`,{\n          method: \"PUT\",\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(note)\n          })\n        }\n    \n    let deleteNote = async () => {\n      fetch(`/api/notes/${noteId}/delete`, {\n        method: \"DELETE\",\n        'headers': {\n          'Content-Type': 'application/json'\n        }\n      })\n      history.push('/')\n    }\n\n    let handleChange = (value) => {\n      setNote(note => ({...note, 'body':value}))\n      console.log('Handle Change:', note)\n    }\n\n    let handleSubmit = () => {\n      console.log('NOTE:', note)\n      if (noteId !== 'new' && note.body === '') {\n        console.log(\"DELETE METHOD TRIGGERED\")\n        deleteNote();\n      } else if (noteId !== 'new') {\n        upddateNote();\n      } else if (noteId === 'new' && note.body !== null) {\n        createNote();\n      }\n      history.push('/')\n    }\n\n    return (\n      <div className='note'>\n        <div className='note-header'>\n          <h3>\n            <ArrowLeft onClick={handleSubmit}/>\n          </h3>\n          {noteId !== 'new' ? (\n            <button onClick={deleteNote}>Delete</button>\n          ) : (\n            <button onClick={handleSubmit}>Done</button>\n          )}\n        </div>\n        <textarea onChange={(e) => { handleChange(e.target.value) }} value={note?.body}></textarea>\n      </div>\n  )\n}\n\nexport default NotePage\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}